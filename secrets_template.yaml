# Template file secrets.yaml per PlantDisplay
# Copiare questo file come 'secrets.yaml' e inserire i valori reali
# IMPORTANTE: secrets.yaml Ã¨ ignorato da Git per sicurezza

# Configurazioni WiFi
wifi_ssid: "TUO_WIFI_SSID"
wifi_password: "TUA_PASSWORD_WIFI"

# Chiavi crittografia per Home Assistant API
api_encryption_key: "GENERA_CHIAVE_32_CARATTERI_RANDOM"

# Password OTA per aggiornamenti sicuri
ota_password: "password_sicura_per_ota"

# Credenziali Home Assistant (se diverse dal default)
ha_url: "http://192.168.1.100:8123"
ha_token: "TOKEN_LONG_LIVED_ACCESS_HOME_ASSISTANT"

# Credenziali API meteo (esempio OpenWeatherMap)
weather_api_key: "TUA_CHIAVE_API_OPENWEATHER"
weather_location: "Roma,IT"

# Configurazioni MQTT (opzionale)
mqtt_broker: "192.168.1.100"
mqtt_username: "esphome"
mqtt_password: "password_mqtt"

# Configurazioni sensori esterni (se utilizzati)
sensor1_calibration_offset: 0.0
sensor2_calibration_offset: 0.0
sensor3_calibration_offset: 0.0
sensor4_calibration_offset: 0.0

# Soglie allarmi personalizzate
plant1_moisture_min: 30
plant2_moisture_min: 25
plant3_moisture_min: 35
plant4_moisture_min: 28

plant1_conductivity_max: 5000
plant2_conductivity_max: 4500
plant3_conductivity_max: 3000
plant4_conductivity_max: 4000

# Configurazioni notifiche
notification_enabled: true
notification_hour_start: 8
notification_hour_end: 22

# Impostazioni display
display_brightness: 80
display_timeout_minutes: 10
antiburn_enabled: true

# Per generare chiavi sicure utilizzare:
# - Linux/Mac: openssl rand -base64 32
# - Python: import secrets; print(secrets.token_urlsafe(32))
# - Online: https://www.random.org/passwords/ (32 caratteri, alfanumerici)

# Esempio di utilizzo nel file principale:
# wifi:
#   ssid: !secret wifi_ssid
#   password: !secret wifi_password
#
# api:
#   encryption:
#     key: !secret api_encryption_key
