# Template configurazione sensori per PlantDisplay
# Questo file contiene esempi di configurazione per sensori reali delle piante

# Esempio sensori I2C per piante (da includere nel file principale)
sensor:
  # Sensore temperatura e umidità per ambiente generale
  - platform: sht3xd
    temperature:
      name: "Temperatura Ambiente"
      id: ambient_temp
      filters:
        - filter_out: nan
    humidity:
      name: "Umidità Ambiente"
      id: ambient_humidity
      filters:
        - filter_out: nan
    address: 0x44
    update_interval: 30s

  # Sensore luce ambientale
  - platform: bh1750
    name: "Illuminamento Generale"
    id: ambient_light
    address: 0x23
    update_interval: 30s
    filters:
      - filter_out: nan

  # Esempio sensori capacitivi per umidità del suolo
  # (Richiedono pin ADC specifici)
  - platform: adc
    pin: GPIO1
    name: "Umidità Suolo Pianta 1"
    id: plant1_soil_moisture
    attenuation: auto
    update_interval: 60s
    filters:
      - calibrate_linear:
          - 1.0 -> 0.0    # Secco
          - 3.0 -> 100.0  # Bagnato
      - lambda: return max(0.0f, min(100.0f, x));

  - platform: adc
    pin: GPIO2
    name: "Umidità Suolo Pianta 2"
    id: plant2_soil_moisture
    attenuation: auto
    update_interval: 60s
    filters:
      - calibrate_linear:
          - 1.0 -> 0.0
          - 3.0 -> 100.0
      - lambda: return max(0.0f, min(100.0f, x));

  # Sensori di conduttività (richiedono circuiti specifici)
  - platform: template
    name: "Conduttività Pianta 1"
    id: plant1_conductivity
    unit_of_measurement: "µS/cm"
    device_class: "conductivity"
    state_class: "measurement"
    lambda: |-
      // Esempio calcolo conduttività da sensore ADC
      // Richiede calibrazione specifica del sensore
      float voltage = id(plant1_soil_moisture).state;
      return voltage * 1000; // Conversione esempio
    update_interval: 60s

# Configurazione multiplexer I2C per più sensori
# (Utile se si hanno molti sensori I2C con lo stesso indirizzo)
i2c:
  - sda: GPIO8
    scl: GPIO9
    scan: true
    id: bus_a
    frequency: 100khz

# Esempio configurazione TCA9548A multiplexer
# (Commentato - da abilitare se necessario)
# tca9548a:
#   - address: 0x70
#     id: multiplex1
#     i2c_id: bus_a

# Switch per controllo irrigazione
# (Collegare relè ai pin del CH422G)
switch:
  - platform: gpio
    name: "Irrigazione Pianta 1"
    id: irrigation_plant1
    pin:
      ch422g: ch422g_hub
      number: 4
      mode:
        output: true
      inverted: false
    restore_mode: ALWAYS_OFF

  - platform: gpio
    name: "Irrigazione Pianta 2"
    id: irrigation_plant2
    pin:
      ch422g: ch422g_hub
      number: 5
      mode:
        output: true
      inverted: false
    restore_mode: ALWAYS_OFF

# Automazioni per irrigazione automatica
automation:
  - alias: "Irrigazione Automatica Pianta 1"
    trigger:
      - platform: numeric_state
        entity_id: sensor.plant1_soil_moisture
        below: 30
    condition:
      - condition: time
        after: '06:00:00'
        before: '22:00:00'
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.irrigation_plant1
      - delay: 
          seconds: 10
      - service: switch.turn_off
        target:
          entity_id: switch.irrigation_plant1

# Binary sensors per rilevamento problemi
binary_sensor:
  - platform: template
    name: "Allarme Pianta 1 Secca"
    id: plant1_dry_alarm
    device_class: problem
    lambda: |-
      if (id(plant1_soil_moisture).state < 20) {
        return true;
      } else {
        return false;
      }

# Notifiche Home Assistant
# (Da configurare in Home Assistant)
# notify:
#   - name: plant_alerts
#     platform: persistent_notification

# Esempio di integrazione con sensori esterni via Home Assistant
# homeassistant:
#   - entity_id: sensor.plant1_conductivity_external
#     id: plant1_external_conductivity
#   - entity_id: sensor.plant1_light_external
#     id: plant1_external_light

# Note implementazione:
# 1. I sensori capacitivi richiedono calibrazione specifica
# 2. La conduttività necessita circuiti di misura dedicati
# 3. Alcuni sensori potrebbero richiedere alimentazione separata
# 4. Verificare compatibilità tensioni (3.3V ESP32 vs 5V sensori)
# 5. Considerare filtri per eliminare rumore delle misure
